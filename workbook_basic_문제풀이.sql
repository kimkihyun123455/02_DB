-- SQL BASIC 문제풀이

-- 1번
SELECT DEPARTMENT_NAME "학과 명", CATEGORY 계열
FROM TB_DEPARTMENT;

-- 2번
SELECT DEPARTMENT_NAME || '의 정원은 '|| CAPACITY||'명 입니다.' AS "학과별 정원"
FROM TB_DEPARTMENT;

-- 3번
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y' 
AND DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME ='국어국문학과')
AND SUBSTR(STUDENT_SSN, INSTR(STUDENT_SSN, '-')+1,1) = '2';

-- 4번
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO = 'A513079' OR STUDENT_NO = 'A513090' OR STUDENT_NO = 'A513091' OR STUDENT_NO = 'A513110' OR STUDENT_NO = 'A513119'
ORDER BY STUDENT_NAME DESC;

-- 5번
SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT 
WHERE CAPACITY BETWEEN 20 AND 30;

-- 6번
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

--7번
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

-- 8번
SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

-- 9번
SELECT  DISTINCT CATEGORY
FROM TB_DEPARTMENT;

-- 10번
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT 
WHERE SUBSTR(STUDENT_NO,1,2)='A2'
AND SUBSTR(STUDENT_ADDRESS,1,2)='전주'
AND ABSENCE_YN ='N';


-- SQL FUNCTION

-- 1번
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, ENTRANCE_DATE 입학년도
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '002'
ORDER BY ENTRANCE_DATE;

-- 2번
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME) != 3;

-- 3번
SELECT PROFESSOR_NAME 교수이름, SUBSTR(TO_CHAR(SYSDATE, 'YYDDMM'),1,2)+2000 - SUBSTR(PROFESSOR_SSN,1,2)-1900 나이
FROM TB_PROFESSOR
ORDER BY PROFESSOR_SSN DESC;

-- 4번
SELECT SUBSTR(PROFESSOR_NAME,2) 이름
FROM TB_PROFESSOR;

-- 5번
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE) - SUBSTR(STUDENT_SSN,1,2)-1900 != 19;

-- 6번
SELECT TO_CHAR(TO_DATE('201231'), 'DAY')
FROM DUAL;

-- 7번
/*
 * TO_DATE('99/10/11', 'YY/MM/DD') : 2099년 10월 11일
 * TO_DATE('49/10/11', 'YY/MM/DD') : 2049년 10월 11일
 * TO_DATE('99/10/11', 'RR/MM/DD') : 1999년 10월 11일
 * TO_DATE('49/10/11', 'RR/MM/DD') : 2049년 10월 11일
 * 
 */

-- 8번
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO,1,1) != 'A';

-- 9번
SELECT ROUND(AVG(POINT),1) 평점
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

-- 10번
SELECT D.DEPARTMENT_NO 학과번호, COUNT(STUDENT_NO)
FROM TB_DEPARTMENT D, TB_STUDENT S
WHERE D.DEPARTMENT_NO = S.DEPARTMENT_NO
GROUP BY D.DEPARTMENT_NO
ORDER BY D.DEPARTMENT_NO;

-- 11번
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

-- 12번
SELECT SUBSTR(TERM_NO,1,4) 년도, ROUND(AVG(POINT),1)
FROM TB_GRADE 
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO,1,4)
ORDER BY SUBSTR(TERM_NO,1,4);

SELECT * FROM TB_STUDENT;

-- 13번
SELECT A.DEPARTMENT_NO, SUM(DECODE(A.ABSENCE_YN, 'Y', 1, 0))
FROM TB_STUDENT A
LEFT JOIN TB_STUDENT B ON(A.DEPARTMENT_NO=B.DEPARTMENT_NO)
GROUP BY A.DEPARTMENT_NO
ORDER BY A.DEPARTMENT_NO;

-- 14번
SELECT A.STUDENT_NAME 동일이름, COUNT(*) "동명인 수"
FROM TB_STUDENT A, TB_STUDENT B
WHERE A.STUDENT_NAME = B.STUDENT_NAME
AND A.STUDENT_NO != B.STUDENT_NO
GROUP BY A.STUDENT_NAME
ORDER BY A.STUDENT_NAME;

-- 15번
SELECT NVL2(SUBSTR(TERM_NO,1,4),SUBSTR(TERM_NO,1,4),' ') 년도, NVL2(SUBSTR(TERM_NO,5,2),SUBSTR(TERM_NO,5,2),' ') 학기, ROUND(AVG(POINT),1)
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO,1,4), SUBSTR(TERM_NO,5,2))
ORDER BY SUBSTR(TERM_NO,1,4);


-------------------------SQL OPTION----------------------

-- 1번
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS 주소지
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

-- 2번
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN ='Y'
ORDER BY STUDENT_SSN DESC;

-- 3번
SELECT STUDENT_NAME 학생이름, STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE (SUBSTR(STUDENT_ADDRESS,1,3) ='경기도' OR SUBSTR(STUDENT_ADDRESS,1,3) = '강원도')
AND SUBSTR(STUDENT_NO,1,1) = 9
ORDER BY STUDENT_NAME;
